<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="trader_info">
	<resultMap id="abatorgenerated_TraderInfoResult" class="com.longan.biz.dataobject.TraderInfo">
		<result column="id" property="id" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="supply_type" property="supplyType" jdbcType="INTEGER" />
		<result column="is_async_supply" property="isAsyncSupply"
			jdbcType="BOOLEAN" />
		<result column="callback_url" property="callbackUrl" jdbcType="VARCHAR" />
		<result column="downstream_key" property="downstreamKey"
			jdbcType="VARCHAR" />
		<result column="trader_type" property="traderType" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="charging_limit" property="chargingLimit"
			jdbcType="INTEGER" />
		<result column="max_mounth" property="maxMounth" jdbcType="INTEGER" />
		<result column="max_day" property="maxDay" jdbcType="INTEGER" />

	</resultMap>
	<sql id="abatorgenerated_Example_Where_Clause">
		<iterate property="oredCriteria" conjunction="or" prepend="where"
			removeFirstPrepend="iterate">
			<isEqual property="oredCriteria[].valid" compareValue="true">
				(
				<iterate prepend="and" property="oredCriteria[].criteriaWithoutValue"
					conjunction="and">
					$oredCriteria[].criteriaWithoutValue[]$
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue"
					conjunction="and">
					$oredCriteria[].criteriaWithSingleValue[].condition$
					#oredCriteria[].criteriaWithSingleValue[].value#
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithListValue"
					conjunction="and">
					$oredCriteria[].criteriaWithListValue[].condition$
					<iterate property="oredCriteria[].criteriaWithListValue[].values"
						open="(" close=")" conjunction=",">
						#oredCriteria[].criteriaWithListValue[].values[]#
					</iterate>
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue"
					conjunction="and">
					$oredCriteria[].criteriaWithBetweenValue[].condition$
					#oredCriteria[].criteriaWithBetweenValue[].values[0]# and
					#oredCriteria[].criteriaWithBetweenValue[].values[1]#
				</iterate>
				)
			</isEqual>
		</iterate>
	</sql>


	<sql id="traderInfoFullColumns">
		id, user_id, supply_type, is_async_supply,
		callback_url,
		downstream_key, trader_type,
		status,charging_limit,
		max_mounth, max_day
	</sql>

	<select id="abatorgenerated_selectByPrimaryKey" resultMap="abatorgenerated_TraderInfoResult"
		parameterClass="com.longan.biz.dataobject.TraderInfo">
		select
		<include refid="trader_info.traderInfoFullColumns" />
		from trader_info
		where
		id = #id:BIGINT#
	</select>
	<select id="abatorgenerated_selectByUserId" resultMap="abatorgenerated_TraderInfoResult"
		parameterClass="com.longan.biz.dataobject.TraderInfo">
		select
		<include refid="trader_info.traderInfoFullColumns" />
		from trader_info
		where
		user_id = #userId:BIGINT#
	</select>
	<select id="abatorgenerated_selectByExample" resultMap="abatorgenerated_TraderInfoResult"
		parameterClass="com.longan.biz.dataobject.TraderInfoExample">
		select
		<include refid="trader_info.traderInfoFullColumns" />
		from trader_info
		<isParameterPresent>
			<include refid="trader_info.abatorgenerated_Example_Where_Clause" />
			<isNotNull property="orderByClause">
				order by $orderByClause$
			</isNotNull>
		</isParameterPresent>
	</select>
	<delete id="abatorgenerated_deleteByPrimaryKey" parameterClass="com.longan.biz.dataobject.TraderInfo">
		delete from trader_info
		where id = #id:BIGINT#
	</delete>
	<delete id="abatorgenerated_deleteByExample" parameterClass="com.longan.biz.dataobject.TraderInfoExample">
		delete from trader_info
		<include refid="trader_info.abatorgenerated_Example_Where_Clause" />
	</delete>
	<insert id="abatorgenerated_insert" parameterClass="com.longan.biz.dataobject.TraderInfo">
		insert into trader_info (
		<include refid="trader_info.traderInfoFullColumns" />
		)
		values (#id:BIGINT#,
		#userId:BIGINT#, #supplyType:INTEGER#,
		#isAsyncSupply:BOOLEAN#,
		#callbackUrl:VARCHAR#,
		#downstreamKey:VARCHAR#, #traderType:INTEGER#,
		#status:INTEGER#,#chargingLimit:INTEGER#,#maxMounth:INTEGER#,#maxDay:INTEGER#)

		<selectKey resultClass="long" keyProperty="id">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="abatorgenerated_updateByPrimaryKeySelective"
		parameterClass="com.longan.biz.dataobject.TraderInfo">
		update trader_info
		<dynamic prepend="set">
			<isNotNull prepend="," property="userId">
				user_id = #userId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="supplyType">
				supply_type =
				#supplyType:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="isAsyncSupply">
				is_async_supply =
				#isAsyncSupply:BOOLEAN#
			</isNotNull>
			<isNotNull prepend="," property="callbackUrl">
				callback_url =
				#callbackUrl:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="downstreamKey">
				downstream_key =
				#downstreamKey:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="traderType">
				trader_type =
				#traderType:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="status">
				status = #status:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="chargingLimit">
				charging_limit =
				#chargingLimit:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="maxMounth">
				max_mounth =
				#maxMounth:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="maxDay">
				max_day = #maxDay:INTEGER#
			</isNotNull>
		</dynamic>
		where id = #id:BIGINT#
	</update>
	<select id="abatorgenerated_countByExample" parameterClass="com.longan.biz.dataobject.TraderInfoExample"
		resultClass="java.lang.Integer">
		select count(*) from trader_info
		<include refid="trader_info.abatorgenerated_Example_Where_Clause" />
	</select>
	<update id="abatorgenerated_updateByExampleSelective">
		update trader_info
		<dynamic prepend="set">
			<isNotNull prepend="," property="record.userId">
				user_id =
				#record.userId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.supplyType">
				supply_type =
				#record.supplyType:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.isAsyncSupply">
				is_async_supply =
				#record.isAsyncSupply:BOOLEAN#
			</isNotNull>
			<isNotNull prepend="," property="record.callbackUrl">
				callback_url =
				#record.callbackUrl:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.downstreamKey">
				downstream_key =
				#record.downstreamKey:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.traderType">
				trader_type =
				#record.traderType:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.status">
				status =
				#record.status:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.chargingLimit">
				charging_limit =
				#record.chargingLimit:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.maxMounth">
				max_mounth =
				#record.maxMounth:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.maxDay">
				max_day =
				#record.maxDay:INTEGER#
			</isNotNull>
		</dynamic>
		<isParameterPresent>
			<include refid="trader_info.abatorgenerated_Example_Where_Clause" />
		</isParameterPresent>
	</update>
</sqlMap>